<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="{772 * noteValue}" height="418">
	
	<fx:Metadata>
		[Event(name="deleteNote", type="org.muzika.events.NoteEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import org.muzika.events.NoteEvent;
			import org.tuio.TuioObject;
			
			/**
			 * The display note that references this.
			 */
			public var displayNote:DisplayNote;
			
			[Bindable]
			/**
			 * The colour for the background.
			 */
			public var colour:Number;
			
			/**
			 * The note value of the note, based on the fidudcial's rotation.
			 * Stored as a number representing the percentage.
			 * For example, a whole note is 1 (100%); a quarter note is 0.25 (25%);
			 */
			private var _noteValue:Number;
			
			/**
			 * Sets the note value based on a rotation value.
			 * The mapping is: [insert when we actually have it]
			 * 
			 * @param angle the angle in radians
			 */
			public function set noteValue(angle:Number):void {
				// convert the angle from radians to degrees for easier comparison
				var degrees:Number = (angle / Math.PI) * 180;
				
				// map degrees to note value
				if(degrees > 320 || degrees < 60 ) {
					// a quarter note
					_noteValue = 0.25;
				} else if(degrees >= 60 && degrees < 180) {
					// a half note
					_noteValue = 0.50;
				} else {
					// a whole note
					_noteValue = 1.00;
				}
			}
			
			[Bindable]
			/**
			 * Gets the current note value of the note.
			 */
			public function get noteValue():Number {
				return _noteValue;
			}
			
			[Bindable]
			/**
			 * The solfege name of the note.
			 */
			public var solfege:String;
		]]>
	</fx:Script>
	
	<s:Label text="{solfege}" y="-78" fontSize="80" />
	
	<s:Rect width="100%" height="100%" alpha="0.5">
		<s:fill>
			<s:SolidColor color="{colour}" />
		</s:fill>
	</s:Rect>
	
	<!--<s:Button label="Delete" y="418" fontSize="35" click="dispatchEvent(new NoteEvent(NoteEvent.DELETE_NOTE))" />-->
	<s:BorderContainer width="120" height="50" includeInLayout="false" y="418"
					   borderColor="0x494949" borderStyle="solid" borderWeight="3"
					   click="dispatchEvent(new NoteEvent(NoteEvent.DELETE_NOTE))">
		<s:layout>
			<s:VerticalLayout verticalAlign="middle" horizontalAlign="center" />
		</s:layout>
		
		<s:Label text="Delete" fontSize="35" />
	</s:BorderContainer>
</s:Group>
